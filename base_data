---
title: DS 6372 - Project 1
author: "Scott & Holmes"
output: word_document
date: "9/26/22"
---

Libraries & Setup

{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

{r}

library(dplyr)
library(tidyr)
library(tidyverse)
library(stringr)
library(corrplot)
library(plotly)
library(GGally)

#library(httpgd)
#hgd()
#hgd_browse()

#reading in the csv
msrp<-read.csv(file.choose())
msrp = read.csv("./Data Files//msrp.csv") #read data.csv
library(stringr)

msrp$Market_Category <- str_replace_all(msrp$Market.Category, c(".*Luxury.*"="Luxury",  ".*Crossover.*"= "Crossover", ".*High-Performance.*"="High-Performance",  ".*Performance.*"= "Performance", ".*Exotic.*"= "Exotic", ".*Hybrid.*"= "Hybrid", ".*Hatchback.*"= "Hatchback",  ".*Factory Tuner.*"= "Factory Tuner", ".*Diesel.*"= "No Category", "N/A"="No Category"))

#quick summary view
sum_msrp<-msrp %>% group_by(Market_Category) %>% summarize( Mean_msrp = mean(MSRP), cars = n()) %>% arrange(desc(cars))
sum_msrp

#Creating categorical variables
msrp<-msrp %>% mutate(Luxury =case_when(Market_Category=="Luxury" ~ 1, TRUE ~ 0 ))
msrp<-msrp %>% mutate(Crossover =case_when(Market_Category=="Crossover" ~ 1, TRUE ~ 0 ))
msrp<-msrp %>% mutate(High_Performance =case_when(Market_Category=="High-Performance" ~ 1, TRUE ~ 0 ))
msrp<-msrp %>% mutate(Performance =case_when(Market_Category=="Performance" ~ 1, TRUE ~ 0 ))
msrp<-msrp %>% mutate(Exotic =case_when(Market_Category=="Exotic" ~ 1, TRUE ~ 0 ))
msrp<-msrp %>% mutate(Hybrid =case_when(Market_Category=="Hybrid" ~ 1, TRUE ~ 0 ))
msrp<-msrp %>% mutate(Factory_Tuner =case_when(Market_Category=="Factory Tuner" ~ 1, TRUE ~ 0 ))

#cleaning up Fuel types to be larger categories
msrp$Fuel_Type <- str_replace_all(msrp$Engine.Fuel.Type, c(".*premium unleaded .*required.*"="Premium Required",  ".*regular.*"= "Regular", ".*premium unleaded .*recommended.*"="Premium Recommended",  ".*diesel.*"= "Diesel", ".*natural gas.*"= "Natural Gas", "electric.*"= "Electric","flex-fuel.*"= "Flex-fuel"))
msrp<-msrp %>% mutate(Fuel_Type =case_when(Model=="Verona" ~ "Regular", TRUE ~ Fuel_Type ))

#quick summary view
sum_msrp<-msrp %>% group_by(Fuel_Type) %>% summarize( Mean_msrp = mean(MSRP), cars = n()) %>% arrange(desc(cars))
sum_msrp

#this isn't working-- pulling from this as a source: https://data.bls.gov/pdq/SurveyOutputServlet
msrp$adjusted.MSRP<-as.factor(msrp$Year)                            
car_inflation = data.frame(
Year = c(1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017), 
inflation = c(1.210809308, 1.142925336, 1.120985403, 1.096947855, 1.06400961, 1.041105909, 1.022624209, 1.018655745, 1.024154902, 1.028123365, 1.028860365, 1.033225675, 1.047568834, 1.062195456, 1.067581227, 1.06179861, 1.06400961, 1.073050337, 1.087069783, 1.07734308, 1.061137577, 1.034755801, 1.018777634, 1.008224356, 1.004880643, 0.99902886, 0.997515175, 1))
msrp = merge(x=msrp,y=car_inflation,by="Year") 
msrp =msrp %>%filter(Year > 2000) 

msrp <-
  msrp %>%
  mutate(log_msrp = log(MSRP),
         log_adj_msrp = log(Adjusted_MSRP), 
         log_Popularity = log(Popularity)
  )


msrp$Adjusted_MSRP=msrp$inflation*msrp$MSRP
#quick summary view
sum_msrp<-msrp %>% group_by(Year) %>% summarize( Mean_msrp = mean(MSRP), Mean_Adjusted_MSRP = mean(Adjusted_MSRP),cars = n()) %>% arrange(desc(Year))
sum_msrp
#checking the structure
head(msrp)
str(msrp)
#setting categories as factors
msrp$Make <- as.factor(msrp$Make)
msrp$Model <- as.factor(msrp$Model)
msrp$Engine.Cylinders <- as.factor(msrp$Engine.Cylinders)
msrp$Transmission.Type <- as.factor(msrp$Transmission.Type)
msrp$Driven_Wheels <- as.factor(msrp$Driven_Wheels)
msrp$Number.of.Doors <- as.factor(msrp$Number.of.Doors)
msrp$Vehicle.Size <- as.factor(msrp$Vehicle.Size)
msrp$Vehicle.Style <- as.factor(msrp$Vehicle.Style)
msrp$Market_Category <- as.factor(msrp$Market_Category)
msrp$Fuel_Type <- as.factor(msrp$Fuel_Type)
msrp$Luxury <- as.factor(msrp$Luxury)
msrp$Crossover <- as.factor(msrp$Crossover)
msrp$High_Performance <- as.factor(msrp$High_Performance)
msrp$Performance <- as.factor(msrp$Performance)
msrp$Exotic <- as.factor(msrp$Exotic)
msrp$Hybrid <- as.factor(msrp$Hybrid)
msrp$Factory_Tuner <- as.factor(msrp$Factory_Tuner,


# RX-8 from all Years had 4-cylinder engines.
msrp$Engine.Cylinders <- msrp$Engine.Cylinders %>% replace_na(4)
# Ferrari FF from 2013 had 2 doors
msrp$Number.of.Doors <- msrp$Number.of.Doors %>% replace_na(2)

# Engine HP is the most highly correlated continuous variable with MSRP. We dropped all N/A rows.
#replacing Nas for engine horsepower, cylinders, and number of doors
msrp <- msrp %>% filter_at(vars(Engine.HP,Engine.Cylinders, Number.of.Doors ),all_vars(!is.na(.)))

#Random Forest
install.packages("randomForest")
install.packages("varImp")
library(randomForest)
library(varImp)
msrp_randomforest = data.frame(   
  MSRP=msrp$MSRP,
  Year=as.factor(msrp$Year),
  Engine.HP=scale(msrp$Engine.HP),
  Engine.Cylinders = scale(msrp$Engine.Cylinders),
  Transmission.Type=as.factor(msrp$Transmission.Type),
  Driven_Wheels=as.factor(msrp$Driven_Wheels),
  Make=as.factor(msrp$Make),
  Popularity=as.factor(msrp$Popularity),
  Number.of.Doors=as.factor(msrp$Number.of.Doors),
  Vehicle.Size=as.factor(msrp$Vehicle.Size),
  Vehicle.Style=as.factor(msrp$Vehicle.Style),
  city.mpg=scale(msrp$city.mpg),
  Luxury=as.factor(msrp$Luxury),
  Crossover=as.factor(msrp$Crossover),
  High_Performance=as.factor(msrp$High_Performance),
  Performance=as.factor(msrp$Performance),
  Exotic=as.factor(msrp$Exotic),
  Hybrid=as.factor(msrp$Hybrid),
  Factory_Tuner=as.factor(msrp$Factory_Tuner)
)
#random forest for msrp
model <- randomForest(MSRP ~  ., data = msrp_randomforest, importance=TRUE) 
importance=importance(model)
varImpPlot(model)

{r}
#random forest for popularity
model <- randomForest(Popularity ~  ., data = msrp_randomforest, importance=TRUE)
importance=importance(model)
varImpPlot(model)


Data clean up, made categorical variables to help provide better analysis. yada yada.

{r}
#EDA scratch
#year and market category-- shows some info that could be included in analysis, like hybrid beginning in 2000s
msrp %>% ggplot(aes(x = Year, y =Market_Category, color = Market_Category)) + geom_point()

#popularity and adjusted msrp by various categories
msrp %>%filter(Market_Category=='Performance') %>% ggplot(aes(x = Adjusted_MSRP, y =Popularity, color = Popularity)) + geom_point()
msrp %>%filter(Market_Category=='Luxury') %>% ggplot(aes(x = Adjusted_MSRP, y =Popularity, color = Popularity)) + geom_point()
msrp %>%filter(Market_Category=='Crossover') %>% ggplot(aes(x = Adjusted_MSRP, y =Popularity, color = Popularity)) + geom_point()

#market category by popularity and msrp
bb <- msrp  %>% ggplot(aes(x = log_Popularity, y=Adjusted_MSRP )) + geom_point(aes(fill=Market_Category, color=Market_Category),pch=21,size=3, alpha=0.5)+ ggtitle("Popularity and MSRP")+ 
  theme_minimal() +
  ylab("Adjusted MSRP")+
  geom_smooth(method='lm', formula= y~x, color="black")
bb
# popularity vs. msrp with year
bb <- msrp  %>% ggplot(aes(x = log_Popularity, y=Adjusted_MSRP )) + geom_point(aes(fill=Year, color=Year),pch=21,size=3, alpha=0.5)+ ggtitle("Popularity and MSRP by Year")+ 
  theme_minimal() +
  ylab("Adjusted MSRP")+
  geom_smooth(method='lm', formula= y~x, color="black")
bb

#hybrid popularity vs. msrp
bb <- msrp   %>%filter(Market_Category=='Hybrid') %>% ggplot(aes(x = log_Popularity, y=Adjusted_MSRP )) + geom_point(aes(fill=Year, color=Year),pch=21,size=3, alpha=0.5)+ ggtitle("Hybrid: Popularity and MSRP by Year")+ 
  theme_minimal() +
  ylab("Adjusted MSRP")+
  geom_smooth(method='lm', formula= y~x, color="black")
bb

bb <- msrp  %>%filter(Market_Category=='Performance') %>% ggplot(aes(x = log_Popularity, y=log_adj_msrp )) + geom_point(aes(fill=Market_Category, color=Market_Category),pch=21,size=3, alpha=0.5)+ ggtitle("Popularity and MSRP")+ 
  theme_minimal() +
  ylab("Adjusted MSRP")+
  geom_smooth(method='lm', formula= y~(x*x), color="black")
bb

bb <- msrp %>%filter(Market_Category=='Crossover') %>% ggplot(aes(x = Popularity, y=Adjusted_MSRP )) + geom_point(aes(fill=Market_Category, color=Market_Category),pch=21,size=3, alpha=0.3)+ ggtitle("Popularity and MSRP")+ 
  geom_smooth(method='lm', formula= y~x, color="black")
bb  
msrp <-
  msrp %>%
  mutate(log_msrp = log(MSRP),
         log_adj_msrp = log(Adjusted_MSRP)
  )
msrp %>% ggplot(aes(x = log_adj_msrp)) + geom_histogram() + facet_wrap(~Year)


# Charts
msrp %>% ggplot(aes(x = Year, y = Adjusted_MSRP)) +
  geom_point()

Due to significant differences in data gathering for msrp, we have decided to focus on 2001 and forward. This gives us the most recent data and data that is consistent in it's msrp methodology.

{r}
# Filter to year 2001 and forward
msrp_trim <-
    msrp %>% filter(Year > 2000)

summary(msrp_trim)
str(msrp_trim)

# log(msrp)
msrp_trim <-
    msrp_trim %>%
    mutate(log_adj_msrp = log(Adjusted_MSRP))

# Continuous Statistics
num_cols <-
    msrp_trim %>%
    select(where(is.numeric)) %>%
    select(-c(MSRP, Adjusted_MSRP, inflation))
str(num_cols)

## Coorelation
cor_matrix <- cor(num_cols,  use = "complete.obs")
corrplot.mixed(cor_matrix)
corrplot(cor_matrix, method = "ellipse", type = "upper")
pairs(num_cols)

msrp_trim %>% ggplot(aes(x = Engine.HP, y = log_adj_msrp)) + geom_point() + geom_smooth(method = "lm")

msrp_trim %>% ggplot(aes(x = Popularity, y = log_adj_msrp)) + geom_point()

msrp_trim %>% ggplot(aes(x = Year, y = log_adj_msrp)) + geom_point()

Multicollinearity - Both MPG variables and Engine HP - City MPG and Highway MPG - Remove both MPG variables from the model in favor of Engine HP
